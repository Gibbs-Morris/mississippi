name: SonarCloud
on:
  push:
    branches:
      - main
  merge_group:
  pull_request:
    branches:
      - main
      - feature/**
env:
  SONAR_PROJECT_KEY: "Gibbs-Morris_mississippi"
  SONAR_ORGANIZATION: "gibbs-morris"
  SONAR_HOST_URL: "https://sonarcloud.io"
  CONFIGURATION: Release
  SOLUTION_PATH: ${{ github.workspace }}/mississippi.slnx
jobs:
  Build:
    name: "Build"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Dotnet
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Cache GitVersion tools
        uses: actions/cache@v4
        with:
          path: ~/.gitversion
          key: ${{ runner.os }}-gitversion
          restore-keys: ${{ runner.os }}-gitversion

      - name: Cache nugets
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}

      - name: Cache Sonar Cloud Cache
        uses: actions/cache@v4
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: |
            ${{ runner.os }}-sonar

      - name: Cache Sonar Cloud Cache
        uses: actions/cache@v4
        with:
          path: ~/sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: |
            ${{ runner.os }}-sonar-scanner

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.1
        with:
          versionSpec: "6.0.5"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.2.1
        with:
          useConfigFile: true

      - name: Setup Java for Sonar Scanner
        uses: actions/setup-java@v4
        with:
          distribution: microsoft
          java-version: "21"

      - name: Restore dotnet tools & packages
        run: |
          # Restore tools defined in the repo manifest (includes dotnet-coverage & SonarScanner)
          dotnet tool restore
          # Regular NuGet restore for the solution will be performed in the next step
          true

      - name: Sonar restore-build-report
        run: |
          # Begin analysis with the tool from the manifest
          dotnet dotnet-sonarscanner begin /k:"${{ env.SONAR_PROJECT_KEY }}" /o:"${{ env.SONAR_ORGANIZATION }}" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ env.SONAR_HOST_URL }}" /v:${{ steps.gitversion.outputs.SemVer }} /d:"sonar.cs.vscoveragexml.reportsPaths=coverage.xml" /d:sonar.exclusions="**/*.lock.json, **/*.DotSettings,**/packages.lock.json"

          # Restore & build
          dotnet restore ${{ env.SOLUTION_PATH }}
          dotnet build ${{ env.SOLUTION_PATH }} --configuration ${{ env.CONFIGURATION }} --no-restore --no-incremental -p:Version=${{ steps.gitversion.outputs.SemVer }}

          # Collect coverage using the restored dotnet-coverage tool
          dotnet dotnet-coverage collect "dotnet test ${{ env.SOLUTION_PATH }} -p:Version=${{ steps.gitversion.outputs.SemVer }} --no-restore --verbosity normal"  -f xml -o "coverage.xml"

          # End analysis
          dotnet dotnet-sonarscanner end /d:sonar.token=${{ secrets.SONAR_TOKEN }}
