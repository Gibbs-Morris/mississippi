name: "Copilot Setup Steps"
on:
  workflow_dispatch:
  push:
    paths:
      - 'global.json'
      - 'Directory.*.props'
      - '.config/dotnet-tools.json'
      - '*.slnx'
      - '.github/workflows/copilot-setup-steps.yml'
  pull_request:
    paths:
      - 'global.json'
      - 'Directory.*.props'
      - '.config/dotnet-tools.json'
      - '*.slnx'
      - '.github/workflows/copilot-setup-steps.yml'

permissions:
  contents: read
  actions: write

env:
  CONFIGURATION: Release

jobs:
  copilot-setup-steps:
    name: "Copilot Setup Steps"
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Cache GitVersion tools
        uses: actions/cache@v4
        with:
          path: ~/.gitversion
          key: ${{ runner.os }}-gitversion-${{ hashFiles('GitVersion.yml') }}
          restore-keys: |
            ${{ runner.os }}-gitversion-

      - name: Cache .NET packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json', 'Directory.Packages.props') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Cache .NET tools
        uses: actions/cache@v4
        with:
          path: ~/.dotnet/tools
          key: ${{ runner.os }}-dotnet-tools-${{ hashFiles('.config/dotnet-tools.json') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-tools-

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.1
        with:
          versionSpec: "6.0.5"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.2.1
        with:
          useConfigFile: true

      - name: Restore local dotnet tools
        run: dotnet tool restore

      - name: Restore packages for main solution
        run: dotnet restore mississippi.slnx

      - name: Restore packages for samples solution
        run: dotnet restore samples.slnx

      - name: Validate setup with lightweight build
        run: |
          dotnet build mississippi.slnx --configuration ${{ env.CONFIGURATION }} --no-restore --verbosity minimal -p:Version=${{ steps.gitversion.outputs.SemVer }}
          dotnet build samples.slnx --configuration ${{ env.CONFIGURATION }} --no-restore --verbosity minimal -p:Version=${{ steps.gitversion.outputs.SemVer }}

      - name: Run lightweight test validation
        run: |
          dotnet test mississippi.slnx --configuration ${{ env.CONFIGURATION }} --no-build --logger "trx;LogFileName=copilot_validation_results.trx" --results-directory ./test-results --verbosity minimal
        continue-on-error: true

      - name: Upload test results for Copilot reference
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: copilot-test-results-${{ github.run_number }}
          path: ./test-results/
          retention-days: 7

      - name: Summary
        run: |
          echo "## ðŸŽ¯ Copilot Setup Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… .NET SDK ${{ steps.gitversion.outputs.SemVer }} configured" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Local tools restored from .config/dotnet-tools.json" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Packages restored for mississippi.slnx and samples.slnx" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Build validation completed" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Test results uploaded for Copilot reference" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The workspace is now fully prepared for GitHub Copilot Workspace/Agents." >> $GITHUB_STEP_SUMMARY