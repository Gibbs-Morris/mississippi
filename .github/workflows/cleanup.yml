name: ReSharper Cleanup Check

on:
  push:
    branches:
      - main
  merge_group:
  pull_request:
    branches:
      - main
      - feature/**

env:
  DOTSETTINGS_PATH: ${{ github.workspace }}/Directory.DotSettings

jobs:
  cleanup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        solution: [ mississippi.slnx, samples.slnx ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Cache GitVersion tools
        uses: actions/cache@v4
        with:
          path: ~/.gitversion
          key: ${{ runner.os }}-gitversion
          restore-keys: ${{ runner.os }}-gitversion

      - name: Cache nugets
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}

      - name: Check for dotnet tools manifest
        id: check-tools-manifest
        run: |
          set -euo pipefail
          if [ -f ".config/dotnet-tools.json" ]; then
            echo "manifest_exists=true" >> $GITHUB_OUTPUT
          else
            echo "manifest_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Restore .NET Tools
        if: steps.check-tools-manifest.outputs.manifest_exists == 'true'
        run: |
          set -euo pipefail
          echo "Restoring dotnet tools..."
          dotnet tool restore
        continue-on-error: false
        
      - name: Install ReSharper Global Tools
        if: steps.check-tools-manifest.outputs.manifest_exists != 'true'
        run: |
          set -euo pipefail
          echo "Installing JetBrains.ReSharper.GlobalTools..."
          dotnet tool install -g JetBrains.ReSharper.GlobalTools
        continue-on-error: false

      - name: Generate legacy solution file
        run: |
          set -euo pipefail
          SLNX_PATH="${{ github.workspace }}/${{ matrix.solution }}"
          SLN_PATH="${SLNX_PATH%.slnx}.sln"
          echo "Generating $SLN_PATH from $SLNX_PATH ..."
          dotnet tool run slngen "$SLNX_PATH" --solutionfile "$SLN_PATH" --launch false
          ls -al "$SLN_PATH"

      - name: Run ReSharper Cleanup Code
        run: |
          set -euo pipefail
          SLNX_PATH="${{ github.workspace }}/${{ matrix.solution }}"
          SLN_PATH="${SLNX_PATH%.slnx}.sln"
          echo "Running ReSharper Cleanup Code on $SLN_PATH ..."
          dotnet tool run jb cleanupcode --profile="Built-in: Full Cleanup" --settings="${{ env.DOTSETTINGS_PATH }}" "$SLN_PATH"
          echo "Cleanup completed."
          echo "SLN_PATH=$SLN_PATH" >> $GITHUB_ENV

      - name: Check for Uncommitted Changes
        run: |
          set -euo pipefail
          echo "Checking for modifications after cleanup..."
          CHANGES=$(git status --porcelain)
          if [ -n "$CHANGES" ]; then
            echo "ERROR: ReSharper cleanup modified files. The following changes are required:"
            git diff --color=always
            echo ""
            echo "To resolve this locally run:"
            echo "dotnet tool run jb cleanupcode --profile=\"Built-in: Full Cleanup\" --settings=\"${DOTSETTINGS_PATH}\" \"$SLN_PATH\""
            exit 1
          else
            echo "No modifications detected. Cleanup check passed."
          fi